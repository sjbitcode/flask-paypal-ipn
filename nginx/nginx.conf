user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile        on;
    keepalive_timeout  65;

    # tells the server to use on-the-fly gzip compression.
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    upstream app_servers {
        server app:8000;
    }

    server {

       # Define the server name, IP address, and/or port of the server
       listen 80;

       # Define the specified charset to the “Content-Type” response header field
       charset utf-8;

       # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
       location / {
           # Define the location of the proxy server to send the request to
           proxy_pass http://app_servers;

           # Redefine the header fields that NGINX sends to the upstream server
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

           # Define the maximum file size on file uploads
           client_max_body_size 5M;
       }

       # Configure NGINX to deliver static content from the specified folder
       location /static/ {
           alias /app/app/static;
       }
    }
}
